name: Build AOT App on Commit

on:
  push:
    branches:
      - main

env:
  DOTNET_VERSION: '9.0.x'
  PROJECT_NAME: 'GeoIpApi'
  TARGET_RID: 'linux-x64'

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Generate version information
        id: get_version
        run: |
          TIMESTAMP_VERSION=$(date +'%Y%m%d-%H%M%S')
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          echo "APP_VERSION=${TIMESTAMP_VERSION}-${SHORT_SHA}" >> $GITHUB_ENV

      - name: Publish AOT application
        run: dotnet publish ${{ env.PROJECT_NAME }}.csproj -c Release -r ${{ env.TARGET_RID }} --self-contained true /p:PublishAot=true -o ./publish_output

      - name: Prepare build artifact names
        id: artifact_details
        run: |
          ARTIFACT_FILENAME="${{ env.PROJECT_NAME }}-${{ env.APP_VERSION }}-${{ env.TARGET_RID }}.tar.gz"
          echo "ARTIFACT_FILENAME=${ARTIFACT_FILENAME}" >> $GITHUB_ENV
          echo "ARTIFACT_PATH=./${ARTIFACT_FILENAME}" >> $GITHUB_ENV
          echo "PUBLISH_DIR=./publish_output" >> $GITHUB_ENV

      - name: Package build artifacts (tar.gz)
        run: tar -czvf ${{ env.ARTIFACT_FILENAME }} -C ${{ env.PUBLISH_DIR }} .

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.PROJECT_NAME }}-${{ env.TARGET_RID }}-${{ env.APP_VERSION }}
          path: ${{ env.ARTIFACT_PATH }}
          retention-days: 7
